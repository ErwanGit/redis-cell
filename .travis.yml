dist: trusty
language: rust
services: docker
sudo: required

# Cache built crates for much faster builds.
cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

notifications:
  email:
    on_success: never

env:
  global:
    - CRATE_NAME=redis-cell

matrix:
  include:
    # Stable.
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-apple-darwin
      os: osx
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1

    # Testing other channels
    - env:
        - NIGHTLY=true
        - TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env:
        - NIGHTLY=true
        - TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install: set -e

install:
  - bash ci/install.sh
  - source ~/.cargo/env || true

before_script:
  - rustup component add rustfmt

  # I'm not clear as to exactly why, but Clippy is occasionally unavailable in
  # certain Nightly builds. This site does a good job of tracking that:
  #
  #     https://rust-lang.github.io/rustup-components-history/index.html
  #
  # For now, I've had to remove it to keep the build green.
  - if [[ -z "$NIGHTLY" ]]; then rustup component add clippy; fi

script:
  - bash ci/script.sh

  # So close to being on stable, but using a few unstable options in
  # `rustfmt.toml` (e.g. `wrap_comments` which is *still* not stable!).
  - if [[ $NIGHTLY == 'true' ]]; then cargo fmt --all -- --check; fi

    # See comment in `before_script`.
  - if [[ -z "$NIGHTLY" ]]; then cargo clippy -- -D warnings; fi

after_script: set +e

before_deploy:
  - bash ci/before_deploy.sh

branches:
  only:
    # Pushes and pull requests to the master branch.
    - master

    # IMPORTANT Ruby regex to match tags. Required, or travis won't trigger
    # deploys when a new tag is pushed. This regex matches semantic versions
    # like v1.2.3-rc4+2016.02.22
    - /^v\d+\.\d+\.\d+.*$/

deploy:
  provider: releases
  # Generated with `travis encrypt $token`. Token is scoped to `public_repo`.
  api_key:
    secure: "fNhmi2LCBE5m6okRahHLsXbzNXtj+KsPw2YH57NfCel9b0ATJGgdIAcPlLsAOoH18Gwj9GrFrnFbGZVe7iI0a0ur2Wa7e/e1NhwL04NYyVNJWPuvkcPraGt+6b8pkNlPluZB44IiRtWdpRFfvj4z9htzCfb0byS7ao2Ix6SCzd4wRgj6DTtS+ymd/zlKboCoy7A5N04mZKnp6i40vB0GptXVg8L/DOLJPH18F5Vv1Xd2W5IOqSYo1pOc6FBwKa6JN+0yF8Vww51zwMcsu5it/yF0pN3RT50pIHQd1YW+095TfPYKw1/ZhWQxuijznu3FjTds/sAL/tLuhPXcTakAl3t1SD535Ru9WXOBw62bQfEyo18D/16uQUg57UVZv4YQqYO2AsUhGqf3mwK5WPLOpHzhTIocXPkuPSgwNOz9PaHHOkJuQ41GSwzgFdqLtyrP0+EmhfdRtM0298IXAvGr5kICeeZMllB3lE6vm2DeI6EhYR3GWWpH79GopxWpfQUrU8OSF6efNaoZ3iNAkYzxpF/zgx1UblLjmqxWSQZ7o8s0yCmy7jWbn3A+qcA1/F3Fx9BuEmtyK6nLNnsbIyDNL0eW2Pv1/kCTRyvHKTA0Nz390ujlHhMF/LtvXN2WhSm027mV/DJWu31UjNA6u3WTq117exIgMoUvNwy6lNFfhLs="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  # Don't delete the artifacts from previous phases.
  skip_cleanup: true
  # Deploy when a new tag is pushed.
  on:
    # Channel to use to produce the release artifacts. NOTE make sure you only
    # release *once* per target.
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true
